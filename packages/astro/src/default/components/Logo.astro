---
import fs from 'node:fs';
import path from 'node:path';
import { joinPaths } from '../utils/url';

const LOGO_EXTENSIONS = ['svg', 'png', 'jpeg', 'jpg'];

interface Props {
  logoLink: string;
}

function readLogoFile(logoPrefix: string) {
  let logo;

  for (const logoExt of LOGO_EXTENSIONS) {
    const logoFilename = `${logoPrefix}.${logoExt}`;
    const exists = fs.existsSync(path.join('public', logoFilename));

    if (exists) {
      logo = joinPaths(import.meta.env.BASE_URL, logoFilename);
      break;
    }
  }

  return logo;
}

const { logoLink } = Astro.props;

const logo = readLogoFile('logo');
const logoDark = readLogoFile('logo-dark') ?? logo;

if (!logo) {
  console.warn(
    [
      `No logo found in public/. Supported filenames are: logo.(${LOGO_EXTENSIONS.join('|')}). `,
      `You can overwrite the logo for dark mode by providing a logo-dark.(${LOGO_EXTENSIONS.join('|')}).`,
    ].join(''),
  );
}
---

<a
  href={logoLink}
  class="flex items-center text-tk-elements-topBar-logo-color hover:text-tk-elements-topBar-logo-colorHover"
>
  {logo && <img class="h-5 w-auto dark:hidden" src={logo} />}
  {logo && <img class="h-5 w-auto hidden dark:inline-block" src={logoDark} />}
</a>
